// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  createdDate DateTime @default(now()) @map("created_date")
  createdBy   Int      @map("created_by")
  updatedDate DateTime @updatedAt @map("updated_date")
  updatedBy   Int?     @map("updated_by")

  @@map("example")
}

model Student {
  id                      Int      @id @default(autoincrement())
  user_id                 Int
  student_code            String   @db.VarChar(16)
  linkedin                String?  @db.Text
  facebook                String?  @db.Text
  instagram               String?  @db.Text
  github                  String?  @db.Text
  year_of_first_admission Int
  year_of_completion      Int
  class_of                String   @db.VarChar(16)
  created_date            DateTime @default(now()) @map("created_date")
  updated_date            DateTime @updatedAt @map("updated_date")
  created_by              Int      @map("created_by")
  updated_by              Int?      @map("updated_by")
  User                    Users    @relation(fields: [user_id], references: [id])

  @@map("student")
}

model Users {
  id           Int       @id @default(autoincrement())
  username     String    @db.VarChar(255)
  profile_url  String    @db.Text
  firstname_th String    @db.VarChar(64)
  lastname_th  String    @db.VarChar(64)
  firstname_en String    @db.VarChar(64)
  lastname_en  String    @db.VarChar(64)
  nickname     String    @db.VarChar(64)
  email        String    @db.VarChar(255)
  phone        String    @db.VarChar(255)
  password     String    @db.VarChar(255)
  role_id      Int
  created_date DateTime  @default(now()) @map("created_date")
  updated_date DateTime  @updatedAt @map("updated_date")
  created_by   Int       @map("created_by")
  updated_by   Int       @map("updated_by")
  Role         Role      @relation(fields: [role_id], references: [id])
  Student      Student[]

  @@map("users")
}

model Role {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(64)
  created_date DateTime @default(now()) @map("created_date")
  updated_date DateTime @updatedAt @map("updated_date")
  created_by   Int      @map("created_by")
  updated_by   Int      @map("updated_by")
  Users        Users[]

  @@map("role")
}
